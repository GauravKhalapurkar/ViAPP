import { Input, Text, HStack, Select, VStack, SimpleGrid, Button } from '@chakra-ui/react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react'
import { app, database } from '../firebaseConfig'
import { addDoc, collection } from 'firebase/firestore'
import QRCode from 'qrcode.react';

// creates a collection instance with name "project"
const dbI = collection(database, 'projects');

export default function Home() {

  // create an empty data structure. Not required tho.
  const [data, setData] = useState({
    ac: '',
    y: '',
    s: '',
    st: '',
    b: '',
    pt: '',
    pr_t: '',
    m: {
      m1: '',
      m2: '',
      m3: '',
      m4: '',
      m5: '',
      m6: '',
    },
    eval: {
      ci: '',
      p: '',
      tw: '',
      sk: '',
      qa: ''
    }
  })

  // A state for button to display loading in case if internet is slow, else its fast enough.
  const [loading, setloading] = useState(false)

  // store the document id once data is added in firebase.
  const [docId, setDID] = useState('');

  // submit the data to firebase
  const onSubmit = () => {
    // chaeck for empty fields. rough check lol. 
    if (data.ac !== '', data.y !== '', data.s !== '', data.st !== '', data.b !== '', data.pt !== '', data.pr_t !== '') {
      // lets just check for atleast one member. 
      if (data.m.m1 !== '') {
        // set loading to true when data is being submitted.
        setloading(true)

        // push the data to collection instance.
        addDoc(dbI, data).then((res) => {
          // If success and we get document id. 
          if (res.id) {
            // set the document id.
            setDID(res.id)
            // set loading to false.
            setloading(false);

            // reset the data.
            // setData({
            //   ac: '',
            //   y: '',
            //   s: '',
            //   st: '',
            //   b: '',
            //   pt: '',
            //   pr_t: '',
            //   m: {
            //     m1: '',
            //     m2: '',
            //     m3: '',
            //     m4: '',
            //     m5: '',
            //     m6: '',
            //   }
            // })
          } else alert("someting went wrong.")
        }).catch((err) => { console.log(err) })
      } else {
        alert('Atleast one member required')
      }
    } else {
      alert('Please fill all the fields')
    }
  }

  // function to handle the download of created qr code.
  const downloadQRCode = () => {
    // get the docuement of qr code.
    const qrCodeURL = document.getElementById('qrCodeEl')
      .toDataURL("image/png")
      .replace("image/png", "image/octet-stream");
    // create a new document
    let aEl = document.createElement("a");
    // set the href to the document.
    aEl.href = qrCodeURL;
    // set a name
    aEl.download = "QR_Code.png";
    // append the document to the body.
    document.body.appendChild(aEl);
    // auto click the document.
    aEl.click();
    // remove once downloaded. 
    document.body.removeChild(aEl);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Add Your Project</title>
        <meta name="description" content="Generated by Vishwaniketan" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2 className={styles.title}>Project Details</h2>
        <Text mb='8px'>Acedmic Year</Text>
        <Input
          value={data.ac}
          onChange={(e) => { setData({ ...data, ac: e.target.value }) }}
          placeholder='2021-2022'
          size='md'
        />
        <HStack pt={"20px"}>
          <VStack alignItems={"flex-start"}>
            <Text mb='8px'>Year</Text>
            <Select placeholder='Select option' onChange={(e) => { setData({ ...data, y: e.target.value }) }}>
              <option value='f1'>First</option>
              <option value='f2'>Second</option>
              <option value='f3'>Third</option>
              <option value='f4'>Fourth</option>
            </Select>
          </VStack>
          <VStack alignItems={"flex-start"}>
            <Text mb='8px'>Semester</Text>
            <Select placeholder='Select option' onChange={(e) => { setData({ ...data, s: e.target.value }) }}>
              <option value='s1'>Semester 1</option>
              <option value='s2'>Semester 2</option>
              <option value='s3'>Semester 3</option>
              <option value='s4'>Semester 4</option>
              <option value='s5'>Semester 5</option>
              <option value='s6'>Semester 6</option>
              <option value='s7'>Semester 7</option>
              <option value='s8'>Semester 8</option>
            </Select>
          </VStack>
        </HStack>
        <HStack p={"20px 0"}>
          <VStack alignItems={"flex-start"}>
            <Text mb='8px'>Subject/Topic</Text>
            <Input
              value={data.st}
              onChange={(e) => { setData({ ...data, st: e.target.value }) }}
              placeholder='Subject/Topic'
              size='md'
            />
          </VStack>
          <VStack alignItems={"flex-start"}>
            <Text mb='8px'>Branch</Text>
            <Select placeholder='Select option' onChange={(e) => { setData({ ...data, b: e.target.value }) }}>
              <option value='CPE'>Computer Engineering</option>
              <option value='EXTC'>EXTC Engineering</option>
              <option value='CVE'>Civil Engineering</option>
              <option value='MCE'>Mechanical Engineering</option>
              <option value='AM'>AI & ML</option>
              <option value='ECE'>Electrical Engineering</option>
            </Select>
          </VStack>
        </HStack>
        <Text mb='8px'>Project Type</Text>
        <Select placeholder='Select option' onChange={(e) => { setData({ ...data, pt: e.target.value }) }}>
          <option value='MJP'>Major Project</option>
          <option value='MNP'>Mini Project</option>
          <option value='VAP'>VAP</option>
          <option value='CLPBL'>CLPBL</option>
        </Select>
        <Text mb='8px' mt="20px">Project Title</Text>
        <Input
          value={data.pr_t}
          onChange={(e) => { setData({ ...data, pr_t: e.target.value }) }}
          placeholder='Project Title'
          size='md'
        />
        <Text mb='8px' mt="20px">Project Members</Text>
        <SimpleGrid columns={2} spacing={6}>
          <Input
            value={data.m.m1}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m1: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
          <Input
            value={data.m.m2}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m2: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
          <Input
            value={data.m.m3}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m3: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
          <Input
            value={data.m.m4}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m4: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
          <Input
            value={data.m.m5}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m5: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
          <Input
            value={data.m.m6}
            onChange={(e) => { setData({ ...data, m: { ...data.m, m6: e.target.value } }) }}
            placeholder='Member Name'
            size='md'
          />
        </SimpleGrid>

        {!docId &&
          <Button colorScheme='teal' variant='outline' mt="30px" onClick={() => onSubmit()} isLoading={loading}>
            Submit
          </Button>

        }

        {
          docId && (
            <>
              <Text mt="30px" mb="20px">Your project has been submitted. Your project id is <b>{docId}</b></Text>
              <QRCode
                id="qrCodeEl"
                size={150}
                value={docId}
              />
              <Button colorScheme='teal' variant='outline' mt="30px" onClick={() => downloadQRCode()} >
                Download QR Code
              </Button>
            </>
          )
        }
      </main>
    </div>
  )
}
